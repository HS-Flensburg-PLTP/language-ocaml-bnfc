-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module Ocaml.Abs where

newtype Ident = Ident String
  deriving (Eq, Ord, Show, Read)

newtype CHAR = CHAR String
  deriving (Eq, Ord, Show, Read)

newtype FLOAT = FLOAT String
  deriving (Eq, Ord, Show, Read)

newtype RELOP = RELOP String
  deriving (Eq, Ord, Show, Read)

newtype CONCATOP = CONCATOP String
  deriving (Eq, Ord, Show, Read)

newtype PLUSMINUSOP = PLUSMINUSOP String
  deriving (Eq, Ord, Show, Read)

newtype MULTDIVOP = MULTDIVOP String
  deriving (Eq, Ord, Show, Read)

newtype POWOP = POWOP String
  deriving (Eq, Ord, Show, Read)

newtype DOTOP = DOTOP String
  deriving (Eq, Ord, Show, Read)

newtype LETOP = LETOP String
  deriving (Eq, Ord, Show, Read)

newtype ANDOP = ANDOP String
  deriving (Eq, Ord, Show, Read)

newtype DecimalLiteral = DecimalLiteral String
  deriving (Eq, Ord, Show, Read)

newtype DecimalLiteralModifier = DecimalLiteralModifier String
  deriving (Eq, Ord, Show, Read)

newtype HexLiteral = HexLiteral String
  deriving (Eq, Ord, Show, Read)

newtype HexLiteralModifier = HexLiteralModifier String
  deriving (Eq, Ord, Show, Read)

newtype OctLiteral = OctLiteral String
  deriving (Eq, Ord, Show, Read)

newtype OctLiteralModifier = OctLiteralModifier String
  deriving (Eq, Ord, Show, Read)

newtype BinLiteral = BinLiteral String
  deriving (Eq, Ord, Show, Read)

newtype BinLiteralModifier = BinLiteralModifier String
  deriving (Eq, Ord, Show, Read)

newtype LABEL = LABEL String
  deriving (Eq, Ord, Show, Read)

newtype LIDENT = LIDENT String
  deriving (Eq, Ord, Show, Read)

newtype OPTLABEL = OPTLABEL String
  deriving (Eq, Ord, Show, Read)

newtype PREFIXOP = PREFIXOP String
  deriving (Eq, Ord, Show, Read)

newtype HASHOP = HASHOP String
  deriving (Eq, Ord, Show, Read)

newtype STRING = STRING String
  deriving (Eq, Ord, Show, Read)

newtype ExtAttrIdent = ExtAttrIdent String
  deriving (Eq, Ord, Show, Read)

newtype UIDENT = UIDENT String
  deriving (Eq, Ord, Show, Read)

data INT
    = ModifiedDecimal DecimalLiteralModifier
    | Decimal DecimalLiteral
    | ModifiedHex HexLiteralModifier
    | Hex HexLiteral
    | ModifiedOct OctLiteralModifier
    | Oct OctLiteral
    | ModifiedBin BinLiteralModifier
    | Bin BinLiteral
  deriving (Eq, Ord, Show, Read)

data QUOTED_STRING_EXPR = Quoted_String_Expr1 ExtAttrIdent
  deriving (Eq, Ord, Show, Read)

data QUOTED_STRING_ITEM = Quoted_String_Item1 ExtAttrIdent
  deriving (Eq, Ord, Show, Read)

data Implementation = Implementation Structure
  deriving (Eq, Ord, Show, Read)

data Interface = Interface Signature
  deriving (Eq, Ord, Show, Read)

data ToplevelPhrase
    = StrExpr StrExpr
    | StructureItems [StructureItem]
    | ToplevelDirective ToplevelDirective
  deriving (Eq, Ord, Show, Read)

data FunctorArg = NoFunctorArg | FunctorArg ModuleName ModuleType
  deriving (Eq, Ord, Show, Read)

data ModuleName = ModuleNameIdent UIDENT | ModuleNameUnderscore
  deriving (Eq, Ord, Show, Read)

data ModuleExpr
    = ModuleExprStruct [Attribute] Structure
    | ModuleExprFunctor [Attribute] [FunctorArg] ModuleExpr
    | ModuleExprParen ParenModuleExpr
    | ModuleExpr ModuleExpr Attribute
    | ModuleExprIdent ModLongident
    | ModuleExprFunctorApp ModuleExpr ParenModuleExpr
    | FunctorAppUnit ModuleExpr
    | ModuleExprExtension Extension
  deriving (Eq, Ord, Show, Read)

data ParenModuleExpr
    = TypedParenModuleExpr ModuleExpr ModuleType
    | ParenModuleExpr ModuleExpr
    | ValParenModuleExpr [Attribute] ExprColonPackageType
  deriving (Eq, Ord, Show, Read)

data ExprColonPackageType
    = Expr Expr
    | TypedExpr Expr ModuleType
    | TypedCoercionExpr Expr ModuleType ModuleType
    | CoercionExpr Expr ModuleType
  deriving (Eq, Ord, Show, Read)

data Structure
    = Structure OptionalStructureStandaloneExpression [StructureElement]
  deriving (Eq, Ord, Show, Read)

data OptionalStructureStandaloneExpression
    = NoStructureStandaloneExpression
    | AStructureStandaloneExpression StrExpr
  deriving (Eq, Ord, Show, Read)

data StrExpr = SeqExpr SeqExpr
  deriving (Eq, Ord, Show, Read)

data StructureElement
    = StructureElement OptionalStructureStandaloneExpression
    | StructureItem StructureItem
  deriving (Eq, Ord, Show, Read)

data StructureItem
    = StructureLetBindings LetBindingsExt
    | StructureItemExtension ItemExtension [PostItemAttribute]
    | StructureFloatingAttribute FloatingAttribute
    | StructurePrimitiveDeclaration PrimitiveDeclaration
    | StructureValueDescription ValueDescription
    | StructureTypeDeclarations TypeDeclarations
    | StructureStrTypeExtension StrTypeExtension
    | StrExceptionDeclaration StrExceptionDeclaration
    | StructureModuleBinding Ext [Attribute] ModuleName ModuleBindingBody [PostItemAttribute]
    | StructureRecModuleBindings RecModuleBinding [AndModuleBinding]
    | StructureModuleTypeDeclaration ModuleTypeDeclaration
    | StructureOpenDeclaration OpenDeclaration
    | StructureClassDeclarations ClassDeclarations
    | StructureClassTypeDeclarations ClassTypeDeclarations
    | StructureIncludeStatement ModuleExprIncludeStatement
  deriving (Eq, Ord, Show, Read)

data ModuleExprIncludeStatement
    = ModuleExprIncludeStatement Ext [Attribute] ModuleExpr [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ModuleBindingBody
    = ModuleBinding ModuleExpr
    | TypedModuleBinding ModuleType ModuleExpr
    | FunctorBinding FunctorArg ModuleBindingBody
  deriving (Eq, Ord, Show, Read)

data RecModuleBinding
    = RecModuleBinding Ext [Attribute] ModuleName ModuleBindingBody [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data AndModuleBinding
    = AndModuleBinding [Attribute] ModuleName ModuleBindingBody [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data OptionalModuleType = NoModuleType | AModuleType ModuleType
  deriving (Eq, Ord, Show, Read)

data ModuleTypeDeclaration
    = ModuleTypeDeclaration [Attribute] OCamlIdent OptionalModuleType [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data OpenDeclaration
    = OpenDeclaration OverrideFlag Ext [Attribute] ModuleExpr [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data OpenDescription
    = OpenDescription OverrideFlag Ext [Attribute] ModExtLongident [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data OpenDotDeclaration = OpenDotDeclaration ModLongident
  deriving (Eq, Ord, Show, Read)

data ModuleType
    = ModuleTypeSignature [Attribute] Signature
    | ModuleTypeFunctor [Attribute] [FunctorArg] ModuleType
    | ModuleTypeOf [Attribute] ModuleExpr
    | ParenModuleType ModuleType
    | ModuleTypeWithAttribute ModuleType Attribute
    | ModuleTypeModuleIdent ModLongident
    | ModuleTypeNoArgFunctorApp ModuleType
    | ModuleTypeFunctorApp ModuleType ModuleType
    | ModuleTypeWith ModuleType [WithConstraint]
    | ModuleTypeExtension Extension
  deriving (Eq, Ord, Show, Read)

data Signature = Signature [SignatureElement]
  deriving (Eq, Ord, Show, Read)

data SignatureElement = SemiSemi | SignatureItem SignatureItem
  deriving (Eq, Ord, Show, Read)

data SignatureItem
    = SigItemExtension ItemExtension [PostItemAttribute]
    | SigFloatingAttribute FloatingAttribute
    | SigValueDescription ValueDescription
    | SigPrimitiveDeclaration PrimitiveDeclaration
    | SigTypeDeclarations TypeDeclarations
    | SigTypeSubstDeclarations TypeSubstDeclarations
    | SigSigTypeExtension SigTypeExtension
    | SigSigExceptionDeclaration SigExceptionDeclaration
    | SigModuleDeclaration ModuleDeclaration
    | SigModuleAlias ModuleAlias
    | SigModuleSubst ModuleSubst
    | SigRecModuleDeclarations RecModuleDeclaration [AndModuleDeclaration]
    | SigModuleTypeDeclaration ModuleTypeDeclaration
    | SigModuleTypeSubst ModuleTypeSubst
    | SigOpenDescription OpenDescription
    | SigIncludeStatement ModuleTypeIncludeStatement
    | SigClassDeclarations ClassDeclarations
    | SigClassTypeDeclarations ClassTypeDeclarations
  deriving (Eq, Ord, Show, Read)

data ModuleTypeIncludeStatement
    = ModuleTypeIncludeStatement Ext [Attribute] ModuleType [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ModuleDeclaration
    = ModuleDeclaration Ext [Attribute] ModuleName ModuleDeclarationBody [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ModuleDeclarationBody
    = ModuleBody ModuleType
    | FunctorBody FunctorArg ModuleDeclarationBody
  deriving (Eq, Ord, Show, Read)

data ModuleAlias
    = ModuleAlias Ext [Attribute] ModuleName ModuleExprAlias [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ModuleExprAlias = ModuleExprAlias ModLongident
  deriving (Eq, Ord, Show, Read)

data ModuleSubst
    = ModuleSubst Ext [Attribute] UIDENT ModExtLongident [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data RecModuleDeclaration
    = RecModuleDeclaration Ext [Attribute] ModuleName ModuleType [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data AndModuleDeclaration
    = AndModuleDeclaration [Attribute] ModuleName ModuleType [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ModuleTypeSubst
    = ModuleTypeSubst Ext [Attribute] OCamlIdent ModuleType [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ClassDeclarations = ClassDeclarations Ext [ClassDeclaration]
  deriving (Eq, Ord, Show, Read)

data ClassDeclaration
    = ClassDeclaration [Attribute] VirtualFlag FormalClassParameters LIDENT ClassFunBinding [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data ClassFunBinding
    = ClassFunBinding ClassExpr
    | TypedClassFunBinding ClassType ClassExpr
    | LabeledClassFunBinding LabeledSimplePattern ClassFunBinding
  deriving (Eq, Ord, Show, Read)

data FormalClassParameters
    = NoFormalClassParamters | FormalClassParameters [TypeParameter]
  deriving (Eq, Ord, Show, Read)

data ClassExpr
    = ClassSimpleExpr ClassSimpleExpr
    | ClassExprFunctor [Attribute] ClassFunDef
    | ClassExprLetBindings LetBindingsNoExt ClassExpr
    | ClassExprLetOpen OverrideFlag [Attribute] ModLongident ClassExpr
    | ClassExpr ClassExpr Attribute
    | LabeledClassSimpleExpr ClassSimpleExpr [LabeledSimpleExpr]
    | ClassExprExtension Extension
  deriving (Eq, Ord, Show, Read)

data ClassSimpleExpr
    = ParenClassExpr ClassExpr
    | ClassName ActualClassParameters ClassLongident
    | TypedClassExpr ClassExpr ClassType
    | ClassSimplExprObject [Attribute] ClassStructure
  deriving (Eq, Ord, Show, Read)

data ClassFunDef
    = ClassFun LabeledSimplePattern ClassExpr
    | LabeledClassFunDef LabeledSimplePattern ClassFunDef
  deriving (Eq, Ord, Show, Read)

data ClassStructure
    = ClassSelfPattern ClassSelfPattern [ClassField]
  deriving (Eq, Ord, Show, Read)

data ClassSelfPattern
    = ParenClassPattern Pattern
    | TypedClassPattern Pattern CoreType
    | NoClassSelfPattern
  deriving (Eq, Ord, Show, Read)

data OptionalAs = NoAs | AAs LIDENT
  deriving (Eq, Ord, Show, Read)

data ClassField
    = ClassFieldInherit OverrideFlag [Attribute] ClassExpr OptionalAs [PostItemAttribute]
    | ClassFieldVal Value [PostItemAttribute]
    | ClassFieldMethod Method_ [PostItemAttribute]
    | ClassFieldConstraint [Attribute] CoreType CoreType [PostItemAttribute]
    | ClassFieldInitializer [Attribute] SeqExpr [PostItemAttribute]
    | ClassFieldItemExtension ItemExtension [PostItemAttribute]
    | ClassFieldFloatingAttribute FloatingAttribute
  deriving (Eq, Ord, Show, Read)

data Value
    = Value1 NoOverrideFlag [Attribute] VirtualWithMutableFlag Label CoreType
    | Value2 OverrideFlag [Attribute] MutableFlag Label SeqExpr
    | Value3 OverrideFlag [Attribute] MutableFlag Label TypeConstraint SeqExpr
  deriving (Eq, Ord, Show, Read)

data Method_
    = Method1 NoOverrideFlag [Attribute] VirtualWithPrivateFlag Label PolyType
    | Method2 OverrideFlag [Attribute] PrivateFlag Label StrictBinding
    | Method3 OverrideFlag [Attribute] PrivateFlag Label PolyType SeqExpr
    | Method4 OverrideFlag [Attribute] PrivateFlag Label [LIDENT] CoreType SeqExpr
  deriving (Eq, Ord, Show, Read)

data ClassType
    = ClassSignature ClassSignature
    | ClassType ArgLabel TupleType ClassType
  deriving (Eq, Ord, Show, Read)

data ClassSignature
    = ClassSignatureName ActualClassParameters CltyLongident
    | ClassSignatureExtension Extension
    | ClassSignatureObject [Attribute] ClassSelfType [ClassSigField]
    | WithAttribute ClassSignature Attribute
    | ClassSignatureLetOpen OverrideFlag [Attribute] ModLongident ClassSignature
  deriving (Eq, Ord, Show, Read)

data ClassSelfType = ClassSelfType CoreType | NoClassSelfType
  deriving (Eq, Ord, Show, Read)

data ActualClassParameters
    = NoActualClassParameters | ActualClassParameters [CoreType]
  deriving (Eq, Ord, Show, Read)

data ClassSigField
    = ClassSigFieldInherit [Attribute] ClassSignature [PostItemAttribute]
    | ClassSigFieldVal [Attribute] MutableVirtualFlags Label CoreType [PostItemAttribute]
    | ClassSigFieldMethod [Attribute] PrivateVirtualFlags Label PolyType [PostItemAttribute]
    | ClassSigFieldConstraint [Attribute] CoreType CoreType [PostItemAttribute]
    | ClassSigFieldItemExtension ItemExtension [PostItemAttribute]
    | ClassSigFieldFloatingAttribute FloatingAttribute
  deriving (Eq, Ord, Show, Read)

data Constrain = Constrain CoreType CoreType
  deriving (Eq, Ord, Show, Read)

data ClassTypeDeclarations
    = ClassTypeDeclarations ClassTypeDeclaration [AndClassTypeDeclaration]
  deriving (Eq, Ord, Show, Read)

data ClassTypeDeclaration
    = ClassTypeDeclaration Ext [Attribute] VirtualFlag FormalClassParameters LIDENT ClassSignature [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data AndClassTypeDeclaration
    = AndClassTypeDeclaration [Attribute] VirtualFlag FormalClassParameters LIDENT ClassSignature [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data FunSeqExpr
    = FunExpr1 FunExpr
    | FunExpr2 FunExpr
    | FunExpr3 FunExpr SeqExpr
    | FunExpr4 FunExpr [AttrId] SeqExpr
  deriving (Eq, Ord, Show, Read)

data SeqExpr
    = SeqExprFunSeqExpr FunSeqExpr
    | SeqExprFunction Ext [Attribute] MatchCases
  deriving (Eq, Ord, Show, Read)

data LabeledSimplePattern
    = OptPattern LabelLetPattern OptDefault
    | OptLabelVar LabelVar
    | OptLabeledPattern OPTLABEL LetPattern OptDefault
    | OptLabeledVar OPTLABEL PatternVar
    | LabeledPattern LabelLetPattern
    | LabeledVar LabelVar
    | LabeledSimplePattern LABEL SimplePattern
    | SimplePattern SimplePattern
  deriving (Eq, Ord, Show, Read)

data PatternVar = PatternVar LIDENT | UnderscorePatternVar
  deriving (Eq, Ord, Show, Read)

data OptDefault = NoDefault | Default SeqExpr
  deriving (Eq, Ord, Show, Read)

data LabelLetPattern
    = LabelLetPattern LabelVar | TypedLabelLetPattern LabelVar CoreType
  deriving (Eq, Ord, Show, Read)

data LabelVar = LabelVar LIDENT
  deriving (Eq, Ord, Show, Read)

data LetPattern
    = LetPattern Pattern | TypedLetPattern Pattern CoreType
  deriving (Eq, Ord, Show, Read)

data QualifiedDotop
    = Unqualified DOTOP | Qualified ModLongident DOTOP
  deriving (Eq, Ord, Show, Read)

data FunExpr
    = SimpleExpr SimpleExpr
    | FunExprAttrs FunExprAttrs
    | Expr_ Expr_
    | Let LetBindingsExt
    | LetOpBinding LETOP LetopBindings SeqExpr
    | Cons FunExpr Expr
    | UpdateExpr Label Expr
    | QualifiedDot SimpleExpr LabelLongident Expr
    | ArrayUpdateExpr SimpleExpr SeqExpr Expr
    | RecordUpdateExpr SimpleExpr SeqExpr Expr
    | StringUpdateExpr SimpleExpr SeqExpr Expr
    | ArrayUpdateDotopExpr SimpleExpr QualifiedDotop [Expr] Expr
    | RecordUpdateDotopExpr SimpleExpr QualifiedDotop [Expr] Expr
    | StringUpdateDotopExpr SimpleExpr QualifiedDotop [Expr] Expr
    | FunExprWithAttribute FunExpr Attribute
  deriving (Eq, Ord, Show, Read)

data Expr = FunExpr FunExpr | Function Ext [Attribute] MatchCases
  deriving (Eq, Ord, Show, Read)

data OptionalAtomicTypeAnnotation
    = NoAtomicTypeAnnotation | AnAtomicTypeAnnotation AtomicType
  deriving (Eq, Ord, Show, Read)

data FunExprAttrs
    = LetModule Ext [Attribute] ModuleName ModuleBindingBody SeqExpr
    | LetException Ext [Attribute] LetExceptionDeclaration SeqExpr
    | LetOpen OverrideFlag Ext [Attribute] ModuleExpr SeqExpr
    | Fun Ext [Attribute] [FunParamAsList] OptionalAtomicTypeAnnotation FunBody
    | Match Ext [Attribute] SeqExpr MatchCases
    | Try Ext [Attribute] SeqExpr MatchCases
    | IfElse Ext [Attribute] SeqExpr Expr Expr
    | If Ext [Attribute] SeqExpr Expr
    | While Ext [Attribute] SeqExpr DoDoneExpr
    | For Ext [Attribute] Pattern SeqExpr DirectionFlag SeqExpr DoDoneExpr
    | Assert Ext [Attribute] SimpleExpr
    | Lazy Ext [Attribute] SimpleExpr
  deriving (Eq, Ord, Show, Read)

data DoDoneExpr = DoDone SeqExpr
  deriving (Eq, Ord, Show, Read)

data Expr_
    = SimpleExprApp SimpleExpr [LabeledSimpleExpr]
    | Comma Expr [ExprComma]
    | ConstrName_ ConstrLongident
    | NameTagApp NameTag SimpleExpr
    | Infix FunExpr InfixOperator Expr
    | Subtractive Subtractive Expr
    | Additive Additive Expr
  deriving (Eq, Ord, Show, Read)

data SimpleExpr
    = ParenSeqExpr SeqExpr
    | TypedSeqExpr SeqExpr TypeConstraint
    | ArrayExpr SimpleExpr SeqExpr
    | RecordExpr SimpleExpr SeqExpr
    | StringExpr SimpleExpr SeqExpr
    | QualifiedArrayExpr SimpleExpr QualifiedDotop [Expr]
    | QualifiedRecordExpr SimpleExpr QualifiedDotop [Expr]
    | QualifiedStringExpr SimpleExpr QualifiedDotop [Expr]
    | SimpleExprAttrs SimpleExprAttrs
    | SimpleExpr_ SimpleExpr_
  deriving (Eq, Ord, Show, Read)

data SimpleExprAttrs
    = BeginEnd Ext [Attribute] SeqExpr
    | EmptyBeginEnd Ext [Attribute]
    | New Ext [Attribute] ClassLongident
    | Module Ext [Attribute] ModuleExpr
    | TypedModule Ext [Attribute] ModuleExpr ModuleType
    | Object Ext [Attribute] ClassStructure
  deriving (Eq, Ord, Show, Read)

data SimpleExpr_
    = ValLongident_ ValLongident
    | Constant_ Constant
    | ConstrName ConstrLongident
    | NameTag_ NameTag
    | PrefixApp PREFIXOP SimpleExpr
    | BangApp SimpleExpr
    | ObjectExpr [ObjectExprField]
    | EmptyObjectExpr
    | RecordAccessTodo SimpleExpr LabelLongident
    | QualifiedArrayExpr_ OpenDotDeclaration SeqExpr
    | QualifiedObjectExpr OpenDotDeclaration [ObjectExprField]
    | MethodInvocation SimpleExpr Label
    | HashOp SimpleExpr HASHOP SimpleExpr
    | Extension Extension
    | EmptyQualifiedArrayAccess OpenDotDeclaration
    | RecordExpr_ RecordExprContent
    | RecordAccess OpenDotDeclaration RecordExprContent
    | ArrayExpr_ [Expr]
    | EmptyArrayExpr
    | ArrayAccesss OpenDotDeclaration [Expr]
    | ArrayAccesssTodo OpenDotDeclaration
    | QualifiedDot_ ModLongident
    | StringExpr_ [Expr]
    | StringAccess OpenDotDeclaration [Expr]
    | StringAccessTodo OpenDotDeclaration
    | QualifiedModule OpenDotDeclaration Ext [Attribute] ModuleExpr ModuleType
  deriving (Eq, Ord, Show, Read)

data LabeledSimpleExpr
    = LabeldSimpleExpr SimpleExpr
    | LabeledExpr LABEL SimpleExpr
    | Label LIDENT
    | TypedLabel LIDENT TypeConstraint
    | OptLabel LIDENT
    | OptLabeledExpr OPTLABEL SimpleExpr
  deriving (Eq, Ord, Show, Read)

data LetBindingBodyNoPunning
    = StrictBinding ValIdent StrictBinding
    | MonoTypedBinding ValIdent TypeConstraint SeqExpr
    | PolyTypedBinding ValIdent [TypeVar] CoreType SeqExpr
    | TypedBindingTodo ValIdent [LIDENT] CoreType SeqExpr
    | PatternNoExnBindingNoPunning PatternNoExn SeqExpr
    | TypedBinding SimplePatternNotIdent CoreType SeqExpr
  deriving (Eq, Ord, Show, Read)

data LetBindingBody
    = LetBindingBodyNoPunning LetBindingBodyNoPunning
  deriving (Eq, Ord, Show, Read)

data LetBindingsNoExt
    = SingleLetBindingNoExt LetBindingNoExt
    | MultipleLetBindingNoExt LetBindingsNoExt AndLetBinding
  deriving (Eq, Ord, Show, Read)

data LetBindingsExt
    = SingleLetBindingExt LetBindingExt
    | MultipleLetBindingExt LetBindingsExt AndLetBinding
  deriving (Eq, Ord, Show, Read)

data LetBindingExt
    = LetBindingExt Ext [Attribute] RecFlag LetBindingBody [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data LetBindingNoExt
    = LetBindingNoExt [Attribute] RecFlag LetBindingBody [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data AndLetBinding
    = AndLetBinding [Attribute] LetBindingBody [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data LetopBindingBody
    = LetIdent ValIdent StrictBinding
    | LetopValIdent ValIdent
    | SimplePatternBinding SimplePattern TypeConstraint SeqExpr
    | PatternNoExnBinding PatternNoExn SeqExpr
  deriving (Eq, Ord, Show, Read)

data LetopBindings
    = BindingBody LetopBindingBody
    | AndOpBinding LetopBindings ANDOP LetopBindingBody
  deriving (Eq, Ord, Show, Read)

data StrictBinding
    = Binding SeqExpr
    | FunParams [FunParamAsList] OptionalTypeConstraint FunBody
  deriving (Eq, Ord, Show, Read)

data FunBody
    = FunBodyFunction Ext [Attribute] MatchCases
    | FunBodyFunSeqExpr FunSeqExpr
  deriving (Eq, Ord, Show, Read)

data MatchCases = MatchCases1 [MatchCase] | MatchCases2 [MatchCase]
  deriving (Eq, Ord, Show, Read)

data MatchCase
    = MatchCase Pattern SeqExpr
    | GuardedMatchCase Pattern SeqExpr SeqExpr
    | UnreachableMatchCase Pattern
  deriving (Eq, Ord, Show, Read)

data FunParamAsList
    = FunParam1 [LIDENT] | FunParam2 LabeledSimplePattern
  deriving (Eq, Ord, Show, Read)

data ExprComma = ExprComma Expr
  deriving (Eq, Ord, Show, Read)

data OptionalWith = NoWith | AWith SimpleExpr
  deriving (Eq, Ord, Show, Read)

data RecordExprFields
    = FinalRecordExprField1 RecordExprField
    | FinalRecordExprField2 RecordExprField
    | MoreRecordExprFields RecordExprFields RecordExprField
  deriving (Eq, Ord, Show, Read)

data RecordExprContent
    = RecordExprContent OptionalWith RecordExprFields
  deriving (Eq, Ord, Show, Read)

data OptionalTypeConstraint
    = NoTypeConstraint | ATypeConstraint TypeConstraint
  deriving (Eq, Ord, Show, Read)

data RecordExprField
    = RecordExprField LabelLongident OptionalTypeConstraint OptionalAssignExpr
  deriving (Eq, Ord, Show, Read)

data OptionalAssignExpr = NoAssign | AnAssign Expr
  deriving (Eq, Ord, Show, Read)

data ObjectExprField = ObjectExprField Label OptionalAssignExpr
  deriving (Eq, Ord, Show, Read)

data TypeConstraint
    = TypeConstraint CoreType
    | TypeConstraintCoercion CoreType CoreType
    | TypeCoercion CoreType
  deriving (Eq, Ord, Show, Read)

data Pattern
    = Pattern PatternPattern | ExceptionPattern Ext [Attribute] Pattern
  deriving (Eq, Ord, Show, Read)

data PatternNoExn = PatternNoExn PatternPatternNoExn
  deriving (Eq, Ord, Show, Read)

data PatternPattern
    = ConsPattern Pattern Pattern
    | PatternWithAttribute Pattern Attribute
    | PatternGen PatternGen
    | AsPattern Pattern ValIdent
    | TuplePattern PatternCommaListPattern
    | OrPattern Pattern Pattern
  deriving (Eq, Ord, Show, Read)

data PatternPatternNoExn
    = ConsPatternNoExn PatternNoExn Pattern
    | PatternWithAttributeNoExn PatternNoExn Attribute
    | PatternGenNoExn PatternGen
    | AsPatternNoExn PatternNoExn ValIdent
    | TuplePatternNoExn PatternCommaListPatternNoExn
    | OrPatternNoExn PatternNoExn Pattern
  deriving (Eq, Ord, Show, Read)

data PatternGen
    = SimplePatternGen SimplePattern
    | ConstrPattern ConstrLongident Pattern
    | ConstrTypePattern ConstrLongident [LIDENT] SimplePattern
    | TagPatternGen NameTag Pattern
    | LazyPattern Ext [Attribute] SimplePattern
  deriving (Eq, Ord, Show, Read)

data SimplePattern
    = ValIdent ValIdent | SimplePatternNotIdent SimplePatternNotIdent
  deriving (Eq, Ord, Show, Read)

data SimplePatternNotIdent
    = ParenPattern Pattern
    | SimpleDelimitedPattern SimpleDelimitedPattern
    | ParenModule Ext [Attribute] ModuleName
    | TypedParenModule Ext [Attribute] ModuleName PackageType
    | SimplePatternNotIdent_ SimplePatternNotIdent_
  deriving (Eq, Ord, Show, Read)

data SimplePatternNotIdent_
    = UnderscorePattern
    | ConstantPattern SignedConstant
    | RangePattern SignedConstant SignedConstant
    | ConstrNamePattern ConstrLongident
    | TagPattern NameTag
    | TypeConstrPattern TypeLongident
    | DotPattern ModLongident SimpleDelimitedPattern
    | EmptyStringPattern ModLongident
    | EmptyArrayPattern_ ModLongident
    | ArrayPattern_ ModLongident Pattern
    | TypedPattern Pattern CoreType
    | ModulePattern Ext [Attribute] ModuleName PackageType
    | ExtensionPattern Extension
  deriving (Eq, Ord, Show, Read)

data SimpleDelimitedPattern
    = RecordPattern RecordPatContent
    | ListPattern [PatternSemi]
    | ArrayPattern [PatternSemi]
    | EmptyArrayPattern
  deriving (Eq, Ord, Show, Read)

data PatternCommaListPattern
    = MorePattern PatternCommaListPattern Pattern
    | TwoPattern Pattern Pattern
  deriving (Eq, Ord, Show, Read)

data PatternCommaListPatternNoExn
    = MorePatternNoExn PatternCommaListPatternNoExn Pattern
    | TwoPatternNoExn PatternNoExn Pattern
  deriving (Eq, Ord, Show, Read)

data PatternSemi = PatternSemi Pattern
  deriving (Eq, Ord, Show, Read)

data OptionalSemi = NoSemi | ASemi
  deriving (Eq, Ord, Show, Read)

data RecordPatContent
    = FinalRecordPattern RecordPatField OptionalSemi
    | UnderscoreRecordPattern RecordPatField
    | MoreRecordPatterns RecordPatField RecordPatContent
  deriving (Eq, Ord, Show, Read)

data OptionalCoreType = NoCoreType | ACoreType CoreType
  deriving (Eq, Ord, Show, Read)

data RecordPatField
    = RecordPatField LabelLongident OptionalCoreType Pattern
  deriving (Eq, Ord, Show, Read)

data ValueDescription
    = ValueDescription Ext [Attribute] ValIdent PolyType CoreType [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data PrimitiveDeclaration
    = PrmitiveDeclaration Ext [Attribute] ValIdent PolyType CoreType [RawString] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data TypeDeclarations
    = TypeDeclarations TypeDeclaration [AndTypeDeclaration]
  deriving (Eq, Ord, Show, Read)

data AndTypeDeclaration
    = AndTypeDeclaration [Attribute] [TypeParameter] LIDENT TypeKind [Constraint] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data TypeSubstDeclarations
    = TypeSubstDeclarations TypeSubstDeclaration [AndTypeSubstDeclaration]
  deriving (Eq, Ord, Show, Read)

data AndTypeSubstDeclaration
    = AndTypeSubstDeclaration [Attribute] [TypeParameter] LIDENT TypeSubstKind [Constraint] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data TypeSubstDeclaration
    = TypeSubstDeclaration Ext [Attribute] TypeParameters LIDENT TypeSubstKind [Constraint] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data TypeDeclaration
    = TypeDeclaration Ext [Attribute] TypeParameters LIDENT TypeKind [Constraint] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data Constraint = Constraint Constrain
  deriving (Eq, Ord, Show, Read)

data NonemptyTypeKind
    = NonemptyTypeKind1 InlinePrivateFlag CoreType
    | NonemptyTypeKind2 TypeSynonym InlinePrivateFlag ConstructorDeclarations
    | NonemptyTypeKind3 TypeSynonym InlinePrivateFlag
    | NonemptyTypeKind4 TypeSynonym InlinePrivateFlag LabelDeclarations
  deriving (Eq, Ord, Show, Read)

data TypeSynonym = NoTypeSynonym | TypeSynonym CoreType
  deriving (Eq, Ord, Show, Read)

data TypeKind = NoTypeKind | TypeKind NonemptyTypeKind
  deriving (Eq, Ord, Show, Read)

data TypeSubstKind = TypeSubstKind NonemptyTypeKind
  deriving (Eq, Ord, Show, Read)

data TypeParameters
    = NoTypeParameters
    | SingleTypeParameter TypeParameter
    | TypeParameters [TypeParameter]
  deriving (Eq, Ord, Show, Read)

data TypeParameter = TypeParameter TypeVariance TypeVariable
  deriving (Eq, Ord, Show, Read)

data TypeVariable = TypeVariable Ident | Underscore
  deriving (Eq, Ord, Show, Read)

data TypeVariance
    = NoVarianceNoInjectivity
    | CovariantNoInjectivity
    | ContravariantNoInjectivity
    | NoVarianceInjective
    | CovariantInjective
    | InjectiveCovariant
    | ContravariantInjective
    | InjectiveContravariant
    | InfixOpVariance PLUSMINUSOP
    | PrefixOpVariance PREFIXOP
  deriving (Eq, Ord, Show, Read)

data ConstructorDeclarations
    = EmptyConstructorDeclarations
    | BarConstructorDeclarations [ConstructorDeclaration]
    | ConstructorDeclarations [ConstructorDeclaration]
  deriving (Eq, Ord, Show, Read)

data ConstructorDeclaration
    = ConstructorDeclaration ConstrIdent GeneralizedConstructorArguments [Attribute]
  deriving (Eq, Ord, Show, Read)

data StrExceptionDeclaration
    = SigStrExceptionDeclaration SigExceptionDeclaration
    | Exception Ext [Attribute] ConstrIdent ConstrLongident [Attribute] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data SigExceptionDeclaration
    = SigExceptionDeclaration Ext [Attribute] ConstrIdent GeneralizedConstructorArguments [Attribute] [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data LetExceptionDeclaration
    = LetExceptionDeclaration ConstrIdent GeneralizedConstructorArguments [Attribute]
  deriving (Eq, Ord, Show, Read)

data GeneralizedConstructorArguments
    = NoGeneralizedConstructorArguments
    | GeneralizedConstructorArguments1 ConstructorArguments
    | GeneralizedConstructorArguments2 ConstructorArguments AtomicType
    | GeneralizedConstructorArguments3 [TypeVar] ConstructorArguments AtomicType
    | GeneralizedConstructorArguments4 AtomicType
    | GeneralizedConstructorArguments5 [TypeVar] AtomicType
  deriving (Eq, Ord, Show, Read)

data ConstructorArguments
    = Arg1 [AtomicType] | Arg2 LabelDeclarations
  deriving (Eq, Ord, Show, Read)

data LabelDeclarations
    = FinalLabelDeclaration LabelDeclaration
    | FinalLabelDeclarationSemi LabelDeclarationSemi
    | MoreLabelDeclarations LabelDeclarationSemi LabelDeclarations
  deriving (Eq, Ord, Show, Read)

data LabelDeclaration
    = LabelDeclaration MutableFlag Label PolyTypeNoAttr [Attribute]
  deriving (Eq, Ord, Show, Read)

data LabelDeclarationSemi
    = LabelDeclarationSemi MutableFlag Label PolyTypeNoAttr [Attribute] [Attribute]
  deriving (Eq, Ord, Show, Read)

data StrTypeExtension
    = StrTypeExtension Ext [Attribute] TypeParameters TypeLongident PrivateFlag BarLlistExtensionConstructor [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data BarLlistExtensionConstructor
    = NoExtensionConstructors
    | BarExtensionConstructors [ExtensionConstructor]
    | ExtensionConstructors [ExtensionConstructor]
  deriving (Eq, Ord, Show, Read)

data SigTypeExtension
    = SigTypeExtension Ext [Attribute] TypeParameters TypeLongident PrivateFlag BarLlistExtensionConstructorDeclaration [PostItemAttribute]
  deriving (Eq, Ord, Show, Read)

data BarLlistExtensionConstructorDeclaration
    = NoConstructor | Constructor [ExtensionConstructorDeclaration]
  deriving (Eq, Ord, Show, Read)

data ExtensionConstructor
    = Declaration ExtensionConstructorDeclaration
    | Rebind ExtensionConstructorRebind
  deriving (Eq, Ord, Show, Read)

data ExtensionConstructorDeclaration
    = ExtensionConstructorDeclaration ConstrIdent GeneralizedConstructorArguments [Attribute]
  deriving (Eq, Ord, Show, Read)

data ExtensionConstructorRebind
    = ExtensionConstructorRebind ConstrIdent ConstrLongident [Attribute]
  deriving (Eq, Ord, Show, Read)

data WithConstraint
    = WithConstraint1 TypeParameters LabelLongident WithTypeBinder CoreTypeNoAttr [Constraint]
    | WithConstraint2 TypeParameters LabelLongident CoreTypeNoAttr
    | WithConstraint3 ModLongident ModExtLongident
    | WithConstraint4 ModLongident ModExtLongident
    | WithConstraint5 MtyLongident ModuleType
    | WithConstraint6 MtyLongident ModuleType
  deriving (Eq, Ord, Show, Read)

data WithTypeBinder
    = WithTypeBinderEqual | WithTypeBinderEqualPrivate
  deriving (Eq, Ord, Show, Read)

data TypeVar = TypeVarIdent Ident
  deriving (Eq, Ord, Show, Read)

data PolyType
    = MonoCoreType CoreType | PolyCoreType [TypeVar] CoreType
  deriving (Eq, Ord, Show, Read)

data PolyTypeNoAttr
    = MonoCoreTypeNoAttr CoreTypeNoAttr
    | PolyCoreTypeNoAttr [TypeVar] CoreTypeNoAttr
  deriving (Eq, Ord, Show, Read)

data CoreType
    = CoreTypeWithoutAttribute AliasType
    | CoreTypeWithAttribute CoreType Attribute
  deriving (Eq, Ord, Show, Read)

data CoreTypeNoAttr = CoreTypeNoAttr AliasType
  deriving (Eq, Ord, Show, Read)

data AliasType
    = FunctionType FunctionType | AliasType AliasType TypeVar
  deriving (Eq, Ord, Show, Read)

data FunctionType
    = TupleType TupleType | FunType ArgLabel TupleType FunctionType
  deriving (Eq, Ord, Show, Read)

data ArgLabel
    = OptArgLabelTodo OPTLABEL
    | OptArgLabel LIDENT
    | ArgLabel LIDENT
    | NoArgLabel
  deriving (Eq, Ord, Show, Read)

data TupleType
    = AtomicType AtomicType | AtomicTypes AtomicType [AtomicType]
  deriving (Eq, Ord, Show, Read)

data OptionalBar = NoBar | ABar
  deriving (Eq, Ord, Show, Read)

data DelimitedTypeSupportingLocalOpen
    = LocalOpen1 CoreType
    | LocalOpen2 Ext [Attribute] PackageType
    | LocalOpen3 TagField
    | LocalOpen4 [RowField]
    | LocalOpen5 RowField [RowField]
    | LocalOpen6 OptionalBar [RowField]
    | LocalOpen7
    | LocalOpen8 OptionalBar [RowField]
    | LocalOpen9 OptionalBar [RowField] [NameTag]
  deriving (Eq, Ord, Show, Read)

data ObjectType = MethList MethList | Empty
  deriving (Eq, Ord, Show, Read)

data DelimitedType
    = ObjectType ObjectType
    | DelimitedTypeExtension Extension
    | DelimitedTypeSupportingLocalOpen DelimitedTypeSupportingLocalOpen
  deriving (Eq, Ord, Show, Read)

data AtomicType
    = DelimitedType DelimitedType
    | TypeApp ActualTypeParameters TypeLongident
    | SubTypeApp ActualTypeParameters CltyLongident
    | QualifiedDelimitedType ModExtLongident DelimitedTypeSupportingLocalOpen
    | TypeVar Ident
    | UnderscoreType
  deriving (Eq, Ord, Show, Read)

data ActualTypeParameters
    = NoActualTypeParamters
    | SingleActualTypeParameter AtomicType
    | ActualTypeParameters CoreType [CoreType]
  deriving (Eq, Ord, Show, Read)

data PackageType = PackageType ModuleType
  deriving (Eq, Ord, Show, Read)

data RowField = TagField TagField | CoreType CoreType
  deriving (Eq, Ord, Show, Read)

data TagField
    = Of NameTag OptAmpersand [CoreTypeNoAttr] [Attribute]
    | Tag NameTag [Attribute]
  deriving (Eq, Ord, Show, Read)

data OptAmpersand = Ampersand | NoAmpersand
  deriving (Eq, Ord, Show, Read)

data MethList
    = FieldSemiMethList Label PolyTypeNoAttr [Attribute] [Attribute] MethList
    | InheritSemiMethList AtomicType MethList
    | FieldSemi Label PolyTypeNoAttr [Attribute]
    | InheritSemi AtomicType
    | Field Label PolyTypeNoAttr [Attribute]
    | Inherit AtomicType
    | DotDot
  deriving (Eq, Ord, Show, Read)

data Label = LabelIdent LIDENT
  deriving (Eq, Ord, Show, Read)

data Constant = Int INT | Char CHAR | String STRING | Float FLOAT
  deriving (Eq, Ord, Show, Read)

data SignedConstant
    = Constant Constant
    | NegInt INT
    | NegFloat FLOAT
    | PosInt INT
    | PosFloat FLOAT
  deriving (Eq, Ord, Show, Read)

data OCamlIdent = Uppercase UIDENT | Lowercase LIDENT
  deriving (Eq, Ord, Show, Read)

data ValExtraIdent = Operator Operator
  deriving (Eq, Ord, Show, Read)

data ValIdent
    = LowercaseValIdent LIDENT | ValExtraIdent ValExtraIdent
  deriving (Eq, Ord, Show, Read)

data Operator
    = PrefixOp PREFIXOP
    | LetOp LETOP
    | AndOp ANDOP
    | ArrayAccessOp DOTOP IndexMod
    | ArrayUpdateOp DOTOP IndexMod
    | StringAccessOp DOTOP IndexMod
    | StringUpdateOp DOTOP IndexMod
    | RecordAccessOp DOTOP IndexMod
    | RecordUpdateOp DOTOP IndexMod
    | HashSymbolOp HASHOP
    | BangOp
    | InfixOp InfixOperator
  deriving (Eq, Ord, Show, Read)

data InfixOperator
    = RelOp RELOP
    | ConcatOp CONCATOP
    | PlusMinusOp PLUSMINUSOP
    | MultDivOp MULTDIVOP
    | PowOp POWOP
    | InfixPlus
    | InfixPlusDot
    | InfixPlusEq
    | InfixMinus
    | InfixMinusDot
    | InfixStar
    | InfixPercent
    | InfixEqual
    | InfixLess
    | InfixGreater
    | InfixOr
    | InfixBarBar
    | InfixAmpersand
    | InfixAmpersandAmpersand
    | InfixColonEqual
  deriving (Eq, Ord, Show, Read)

data IndexMod = NoIndexMod | SemiDotDot
  deriving (Eq, Ord, Show, Read)

data ConstrExtraIdent = ConstrIdent
  deriving (Eq, Ord, Show, Read)

data ConstrExtraNonprefixIdent
    = Brackets | Parens | FalseLiteral | TrueLiteral
  deriving (Eq, Ord, Show, Read)

data ConstrIdent
    = ConstrUppercaseIdent UIDENT
    | ConstrExtraIdent ConstrExtraIdent
    | ConstrExpraNonprefixIdent ConstrExtraNonprefixIdent
  deriving (Eq, Ord, Show, Read)

data ConstrLongident
    = ModLongidentTodo ModLongident
    | QualifiedConstrExtraLongident ModLongident ConstrExtraIdent
    | ConstrExtraLongdent ConstrExtraIdent
    | ConstrExtraNonprefixLonident ConstrExtraNonprefixIdent
  deriving (Eq, Ord, Show, Read)

data ValLongident
    = ValLongident ValIdent
    | QualifiedValLongident ModLongident ValIdent
  deriving (Eq, Ord, Show, Read)

data LabelLongident
    = LabelLongident LIDENT
    | QualifiedLabelLongident ModLongident LIDENT
  deriving (Eq, Ord, Show, Read)

data TypeLongident
    = TypeLongident LIDENT
    | QualifiedTypelLongident ModExtLongident LIDENT
  deriving (Eq, Ord, Show, Read)

data ModLongident
    = ModLongident UIDENT | QualifiedModLongident ModLongident UIDENT
  deriving (Eq, Ord, Show, Read)

data ModExtLongident
    = ModExtLongident UIDENT
    | QualifiedModExtLongident ModExtLongident UIDENT
    | ParenModExtLongident ModExtLongident ModExtLongident
  deriving (Eq, Ord, Show, Read)

data MtyLongident
    = MtyLongident OCamlIdent
    | QualifiedMtyLongident ModExtLongident OCamlIdent
  deriving (Eq, Ord, Show, Read)

data CltyLongident
    = CltyLongident LIDENT
    | QualifiedCltyLongident ModExtLongident LIDENT
  deriving (Eq, Ord, Show, Read)

data ClassLongident
    = ClassLongident LIDENT
    | QualifiedClassLongident ModLongident LIDENT
  deriving (Eq, Ord, Show, Read)

data OptionalToplevelDirectiveArgument
    = NoToplevelDirectiveArgument
    | AToplevelDirectiveArgument ToplevelDirectiveArgument
  deriving (Eq, Ord, Show, Read)

data ToplevelDirective
    = ToplevelDirectiveApp Ident ToplevelDirectiveArgument
  deriving (Eq, Ord, Show, Read)

data ToplevelDirectiveArgument
    = ToplevelString String
    | ToplevelInt Integer
    | ValueIdent ValLongident
    | ToplevelModuleIdent ModLongident
    | ToplevelFalse
    | ToplevelTrue
  deriving (Eq, Ord, Show, Read)

data RawString = RawString String
  deriving (Eq, Ord, Show, Read)

data NameTag = NameTag Ident
  deriving (Eq, Ord, Show, Read)

data RecFlag = Nonrecursive | Recursive
  deriving (Eq, Ord, Show, Read)

data NonrecFlag = NoNonrecFlag | ANonrecFlag
  deriving (Eq, Ord, Show, Read)

data DirectionFlag = UpTo | DownTo
  deriving (Eq, Ord, Show, Read)

data PrivateFlag = Public | Private
  deriving (Eq, Ord, Show, Read)

data InlinePrivateFlag = InlinePublic | InlinePrivate
  deriving (Eq, Ord, Show, Read)

data MutableFlag = Immutable | Mutable
  deriving (Eq, Ord, Show, Read)

data VirtualFlag = Concrete | Virtual
  deriving (Eq, Ord, Show, Read)

data MutableVirtualFlags
    = ImmutableContrete
    | MutableConcrete
    | ImmutableVirtual
    | MutableVirtual
    | VirtualMutable
  deriving (Eq, Ord, Show, Read)

data PrivateVirtualFlags
    = PublicConcrete
    | PrivateConcrete
    | PublicVirtual
    | PrivateVirtual
    | VirtualPrivate
  deriving (Eq, Ord, Show, Read)

data VirtualWithMutableFlag
    = VirtualWithImmutable
    | MutableWithVirtual
    | VirtualWithMutable
    | PrivateWithVirtual
    | VirtualWithPrivate
  deriving (Eq, Ord, Show, Read)

data VirtualWithPrivateFlag = VirtualWithPublic
  deriving (Eq, Ord, Show, Read)

data NoOverrideFlag = NoFlag
  deriving (Eq, Ord, Show, Read)

data OverrideFlag = Fresh | Override
  deriving (Eq, Ord, Show, Read)

data Subtractive = Minus | MinusDot
  deriving (Eq, Ord, Show, Read)

data Additive = Plus | PlusDot
  deriving (Eq, Ord, Show, Read)

data AttrId
    = LowercaseAttr LIDENT
    | UppercaseAttr UIDENT
    | AndAttr
    | AsAttr
    | AssertAttr
    | BeginAttr
    | ClassAttr
    | ConstraintAttr
    | DoAttr
    | DoneAttr
    | DowntoAttr
    | ElseAttr
    | EndAttr
    | ExceptionAttr
    | ExternalAttr
    | FalseAttr
    | ForAttr
    | FunAttr
    | FunctionAttr
    | FunctorAttr
    | IfAttr
    | InAttr
    | IncludeAttr
    | InheritAttr
    | InitializerAttr
    | LazyAttr
    | LetAttr
    | MatchAttr
    | MethodAttr
    | ModuleAttr
    | MutableAttr
    | NewAttr
    | NonrecAttr
    | ObjectAttr
    | OfAttr
    | OpenAttr
    | OrAttr
    | PrivateAttr
    | RecAttr
    | SigAttr
    | StructAttr
    | ThenAttr
    | ToAttr
    | TrueAttr
    | TryAttr
    | TypeAttr
    | ValAttr
    | VirtualAttr
    | WhenAttr
    | WhileAttr
    | WithAttr
  deriving (Eq, Ord, Show, Read)

data Attribute = Attribute [AttrId] AttrPayload
  deriving (Eq, Ord, Show, Read)

data PostItemAttribute = PostItemAttribute [AttrId] AttrPayload
  deriving (Eq, Ord, Show, Read)

data FloatingAttribute = FloatingAttribute [AttrId] AttrPayload
  deriving (Eq, Ord, Show, Read)

data Ext = NoExt | Ext [AttrId]
  deriving (Eq, Ord, Show, Read)

data Extension
    = ExtensionPayload [AttrId] Payload
    | QuotedStringExpr QUOTED_STRING_EXPR
  deriving (Eq, Ord, Show, Read)

data ItemExtension
    = ItemExtensionPayload [AttrId] Payload
    | QuotedStringItem QUOTED_STRING_ITEM
  deriving (Eq, Ord, Show, Read)

data Payload
    = PayloadStructure Structure
    | PayloadSignature Signature
    | PayloadCoreType CoreType
    | PayloadPattern Pattern
    | PayloadGuardedPattern Pattern SeqExpr
  deriving (Eq, Ord, Show, Read)

data AttrPayload = AttrPayload Payload
  deriving (Eq, Ord, Show, Read)

